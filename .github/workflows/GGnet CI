name: GGnet CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3.11 python3.11-venv python3.11-dev python3-pip nodejs npm postgresql postgresql-contrib redis-server nginx targetcli-fb open-iscsi qemu-utils tftpd-hpa isc-dhcp-server git curl wget unzip build-essential libpq-dev supervisor logrotate ipxe grub-efi-amd64-bin

    - name: Start PostgreSQL and Redis
      run: |
        sudo systemctl start postgresql
        sudo systemctl start redis-server
        sudo -u postgres psql -c "CREATE USER ggnet WITH PASSWORD 'ggnet_password';" || true
        sudo -u postgres psql -c "CREATE DATABASE ggnet OWNER ggnet;" || true
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ggnet TO ggnet;" || true

    - name: Run install.sh
      run: |
        sudo chmod +x scripts/install.sh
        sudo ./scripts/install.sh

    - name: Lint with flake8
      run: |
        /opt/ggnet/venv/bin/pip install flake8
        /opt/ggnet/venv/bin/flake8 /opt/ggnet/backend --count --select=E9,F63,F7,F82 --show-source --statistics
        /opt/ggnet/venv/bin/flake8 /opt/ggnet/backend --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run backend tests
      run: |
        cd /opt/ggnet/backend
        export PYTHONPATH=/opt/ggnet/backend
        export DATABASE_URL="postgresql://ggnet:ggnet_password@localhost/ggnet"
        /opt/ggnet/venv/bin/pytest tests -v --disable-warnings --cov=app
